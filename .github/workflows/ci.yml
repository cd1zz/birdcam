name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Frontend build and lint check
  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web-ui/package-lock.json
    
    - name: Install dependencies
      working-directory: ./web-ui
      run: npm ci
    
    - name: Run linter
      working-directory: ./web-ui
      run: npm run lint
    
    - name: Build frontend
      working-directory: ./web-ui
      run: npm run build
    
    - name: Run tests
      working-directory: ./web-ui
      run: npm test
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: web-ui/dist

  # Backend Python tests
  backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.processor.txt
        pip install -r tests/requirements.txt
    
    - name: Run tests with pytest
      run: |
        export PYTHONPATH=$PYTHONPATH:.
        pytest --cov=. --cov-report=xml --cov-report=term --timeout=30 -k "not cross_camera"
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: backend